package data;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.fasterxml.jackson.databind.ObjectMapper;

import entities.People;

@Transactional
@Repository
public class PeopleDAOImpl implements PeopleDAO {
	
	@PersistenceContext
	private EntityManager em;

	@Override
	public List<People> index() {
		String query = "SELECT p FROM People p";
		return em.createQuery(query, People.class).getResultList();
	}

	@Override
	public People show(int id) {
		return em.find(People.class, id);

	}

	@Override
	public People create(String peopleJSON) {
		ObjectMapper mapper = new ObjectMapper();
		
		try {
		  People mappedPeople = mapper.readValue(peopleJSON, People.class);
		  em.persist(mappedPeople);
		  em.flush();
		  
		  return mappedPeople;
		} catch (Exception e) {
		  e.printStackTrace();
		}
		return null;
	}

	@Override
	public People update(int id, String peopleJSON) {
		ObjectMapper mapper = new ObjectMapper();
		  People mappedPeople = null;
		  try {
			  mappedPeople = mapper.readValue(peopleJSON, People.class);
		  }	catch(Exception e) {
			  e.printStackTrace();
		  }
		  People p = em.find(People.class, id);
		  p.setName(mappedPeople.getName());
		  
			
		 return p;
	}

	@Override
	public boolean destroy(int id) {
		People p = em.find(People.class, id);
		try{
			em.remove(p);
			return true;
		}catch(Exception e) {
			e.printStackTrace();
			return false;
		}

	}
	
}
	
